[{"/Users/genevievecoogan/Desktop/patients/src/index.tsx":"1","/Users/genevievecoogan/Desktop/patients/src/App.tsx":"2","/Users/genevievecoogan/Desktop/patients/src/actions/PatientActions.ts":"3","/Users/genevievecoogan/Desktop/patients/src/Store.ts":"4","/Users/genevievecoogan/Desktop/patients/src/reducers/RootReducer.ts":"5","/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/PatientActionTypes.ts":"6","/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/VisitActionTypes.ts":"7","/Users/genevievecoogan/Desktop/patients/src/reducers/PatientReducer.ts":"8","/Users/genevievecoogan/Desktop/patients/src/reducers/VisitReducer.ts":"9","/Users/genevievecoogan/Desktop/patients/src/reducers/PhysicianReducer.ts":"10","/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/PhysicianActionType.ts":"11","/Users/genevievecoogan/Desktop/patients/src/components/MainTable.tsx":"12"},{"size":287,"mtime":1610934372882,"results":"13","hashOfConfig":"14"},{"size":250,"mtime":1611011603092,"results":"15","hashOfConfig":"14"},{"size":1740,"mtime":1611019327887,"results":"16","hashOfConfig":"14"},{"size":361,"mtime":1610933018804,"results":"17","hashOfConfig":"14"},{"size":338,"mtime":1611008211838,"results":"18","hashOfConfig":"14"},{"size":613,"mtime":1610985647015,"results":"19","hashOfConfig":"14"},{"size":599,"mtime":1610987571504,"results":"20","hashOfConfig":"14"},{"size":810,"mtime":1610986021342,"results":"21","hashOfConfig":"14"},{"size":800,"mtime":1610986171577,"results":"22","hashOfConfig":"14"},{"size":837,"mtime":1611010434211,"results":"23","hashOfConfig":"14"},{"size":619,"mtime":1611010417380,"results":"24","hashOfConfig":"14"},{"size":4561,"mtime":1611015939769,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wi2bxy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/Users/genevievecoogan/Desktop/patients/src/index.tsx",[],["52","53"],"/Users/genevievecoogan/Desktop/patients/src/App.tsx",[],"/Users/genevievecoogan/Desktop/patients/src/actions/PatientActions.ts",[],"/Users/genevievecoogan/Desktop/patients/src/Store.ts",[],"/Users/genevievecoogan/Desktop/patients/src/reducers/RootReducer.ts",[],"/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/PatientActionTypes.ts",[],"/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/VisitActionTypes.ts",[],"/Users/genevievecoogan/Desktop/patients/src/reducers/PatientReducer.ts",[],"/Users/genevievecoogan/Desktop/patients/src/reducers/VisitReducer.ts",[],"/Users/genevievecoogan/Desktop/patients/src/reducers/PhysicianReducer.ts",[],"/Users/genevievecoogan/Desktop/patients/src/actions/ActionTypes/PhysicianActionType.ts",[],"/Users/genevievecoogan/Desktop/patients/src/components/MainTable.tsx",["54"],"import React, { useState, useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport Loader from 'react-loader-spinner'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootStore } from \"../Store\";\nimport { GetPatient, GetPatientVisits, GetPhysician } from \"../actions/PatientActions\";\nimport Arrow from '../assets/arrow.svg';\nimport \"./index.css\";\n\n\nconst MainTable: React.FC = () => {\n  const dispatch = useDispatch();\n  const [patientView, setPatientView] = useState(false);\n  const [physicianView, setPhysicianView] = useState(false);\n  const patientState = useSelector((state: RootStore) => state.patient);\n  const visitState = useSelector((state: RootStore) => state.visit);\n  const physicianState = useSelector((state: RootStore) => state.physician)\n\n  useEffect(() => {\n    dispatch(GetPatient());\n  }, []);\n\n\n\n  const showVisits = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const pId = event.currentTarget.id;\n    dispatch(GetPatientVisits(pId));\n    setPatientView(true);\n  };\n\n  const showPhysician = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const pId = event.currentTarget.id;\n    dispatch(GetPhysician(pId));\n    setPhysicianView(true) \n    setPatientView(false)\n  }\n\n  const goBack = () => {\n      setPatientView(false)\n      setPhysicianView(false)\n  }\n\n \n\n \n  return (\n    <div>\n      {!patientView && !physicianView ?\n      <>\n      <h2>List of our patients</h2>\n      <table>\n      <thead>\n        <tr>\n          <th>First</th>\n          <th>Last</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Address</th>\n          <th>Since</th>\n          <th>Visits</th>\n        </tr>\n      </thead>\n      {patientState.patient && (\n        <>\n          {patientState.patient.map(r => {\n            return (\n              <tbody>\n                <tr>\n                  <td>{r.firstName}</td>\n                  <td>{r.lastName}</td>\n                  <td>{r.email}</td>\n                  <td>{r.phone}</td>\n                  <td>{r.address}</td>\n                  <td>\n                    <Moment format=\"YYYY/MM/DD\">{r.since}</Moment>\n                  </td>\n                  <td onClick={showVisits} id={r.id} className=\"name\">Click!</td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </>\n      )}\n    </table> </> : null\n    }\n      {patientView && !physicianView ? (\n        <>\n         {visitState.loading ? \t<Loader type=\"ThreeDots\" color=\"#e85a4f\" height={80} width={80} /> : (\n           <>\n            <div className=\"header_arrow\">\n               <img onClick={goBack} src={Arrow} alt=\"back\" />\n               <h2>Paitent Visits</h2>\n          </div>\n          <table>\n            <thead>\n              <tr>\n                <th>Location</th>\n                <th>Symptoms</th>\n                <th>Diagnosis</th>\n                <th>More Info</th>\n              </tr>\n            </thead>\n            {visitState.visit && (\n              <>\n                {visitState.visit.map(v => {\n                  return (\n                    <tbody>\n                      <tr>\n                        <td className=\"visit_td\">{v.location}</td>\n                        <td className=\"visit_td\">{v.symptoms}</td>\n                        <td className=\"visit_td\">{v.diagnosis}</td>\n                        <td  id={v.physicianId} onClick={showPhysician} className=\"name visit_td\">Click Here!</td>\n                      </tr>\n                    </tbody>\n                  );\n                })}\n              </>\n            )}\n          </table>\n           </>\n         )\n           \n         }\n        </>\n      ) : null}\n      {physicianView && !patientView ? (\n        <>\n        {physicianState.loading ? \t<Loader type=\"ThreeDots\" color=\"#e85a4f\" height={80} width={80} /> : (\n          <>\n           <div className=\"header_arrow\">\n             <img onClick={goBack} src={Arrow} alt=\"back\" />\n             <h2>Physician Info</h2>\n          </div>\n         <table>\n            <thead>\n              <tr>\n                <th>First</th>\n                <th>Last</th>\n                <th>Phone</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{physicianState.physician?.firstName}</td>\n                <td>{physicianState.physician?.lastName}</td>\n                <td>{physicianState.physician?.phone}</td>\n              </tr>\n            </tbody>\n            \n          </table>\n          </>\n        )}\n        </>\n      ): null}\n    </div>\n  );\n};\n\nexport default MainTable;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":21,"column":6,"nodeType":"61","endLine":21,"endColumn":8,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [dispatch]",{"range":"68","text":"69"},[836,838],"[dispatch]"]